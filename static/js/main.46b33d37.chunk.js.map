{"version":3,"sources":["config/FirebaseConfig.js","components/layout/SignInLink.js","actions/authActions.js","actions/types.js","components/layout/SignOutLink.js","components/layout/Navbar.js","components/posts/Post.js","components/posts/PostsList.js","components/dashboard/Profile.js","components/dashboard/Dashboard.js","components/posts/PostDetail.js","components/auth/SignIn.js","components/auth/SignUp.js","actions/postActions.js","components/posts/AddPost.js","App.js","reducers/authReducer.js","reducers/postReducer.js","reducers/index.js","store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestoreConfigRef","firestore","mapDispatch","signOut","dispatch","auth","then","type","connect","props","className","to","onClick","profile","initials","SignOutLink","state","firebaseRD","uid","Post","title","post","firstName","lastName","moment","createAt","toDate","toString","format","PostsList","posts","console","log","list","map","id","key","Profile","modal","document","getElementById","window","onclick","event","target","style","display","handleProfileClick","e","preventDefault","open","Fragment","src","Dashboard","this","Component","compose","firestoreRD","ordered","postRD","firestoreConnect","collection","ownProps","match","params","data","content","SignIn","email","password","handleOnSubmit","signIn","history","push","handleOnChange","setState","name","value","authError","onSubmit","onChange","credential","signInWithEmailAndPassword","catch","err","authRD","SignUp","signUp","createUserWithEmailAndPassword","resp","doc","user","set","AddPost","addPost","proflie","getState","authorId","add","Date","App","exact","path","component","PostDetail","initialState","authReducer","action","message","postReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","getFirebase","getFirestore","logger","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseStateName","firebaseAuthIsReady","ReactDOM","render"],"mappings":"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","file":"static/js/main.46b33d37.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDxMZ_DhS1vWaQ9Y3KCy9R8kaUxNbRZrsQ\",\r\n  authDomain: \"codeblog-70639.firebaseapp.com\",\r\n  databaseURL: \"https://codeblog-70639.firebaseio.com\",\r\n  projectId: \"codeblog-70639\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"771021701286\",\r\n  appId: \"1:771021701286:web:e3e63ffbd0701b46083467\",\r\n  measurementId: \"G-X7HHVRYZNC\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestoreConfigRef = firebase.firestore();\r\nexport default firebase;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../actions/authActions';\r\n\r\nconst SignInLink = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/codeblogRedux/addpost'>Add Post</NavLink></li>\r\n      <li><a onClick={props.signOut} >Log Out</a></li>\r\n      <li><NavLink to='/codeblogRedux' className='btn btn-floating blue darken-2'>{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatch = {\r\n  signOut: signOut\r\n}\r\n\r\nexport default connect(null, mapDispatch)(SignInLink);\r\n","import firebase from 'firebase'; //getFirebase is no longer available if you are using v3 react-redux-firebase\r\nimport { LOGIN_SUCCESS, LOGIN_ERROR, SIGNOUT_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR } from './types';\r\nimport { firestoreConfigRef } from '../config/FirebaseConfig';\r\n\r\nexport const signIn = (credential) => (dispatch) => {\r\n  firebase.auth().signInWithEmailAndPassword(\r\n    credential.email,\r\n    credential.password\r\n  ).then(() => {\r\n    dispatch({ type: LOGIN_SUCCESS })\r\n  }).catch((err) => {\r\n    dispatch({ type: LOGIN_ERROR, err: err })\r\n  })\r\n}\r\n\r\nexport const signOut = () => (dispatch) => {\r\n  firebase.auth().signOut()\r\n    .then(() => {\r\n      dispatch({ type: SIGNOUT_SUCCESS });\r\n    })\r\n}\r\n\r\nexport const signUp = (credential) => (dispatch) => {\r\n  firebase.auth().createUserWithEmailAndPassword(credential.email, credential.password)\r\n    .then((resp) => {\r\n      return firestoreConfigRef.collection('users').doc(resp.user.uid).set({\r\n        firstName: credential.firstName,\r\n        lastName:credential.lastName,\r\n        initials:credential.firstName[0]+credential.lastName[0]\r\n      })\r\n    })\r\n    .then(()=>{\r\n      dispatch({ type: SIGNUP_SUCCESS });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: SIGNUP_ERROR, err: err })\r\n    })\r\n}","export const ADD_POST = \"ADD_POST\";\r\nexport const ADD_POST_ERROR = \"ADD_POST_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\";\r\nexport const SIGNOUT_ERROR = \"SIGNOUT_ERROR\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst SignOutLink = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/codeblogRedux/signup'>Sign Up</NavLink></li>\r\n      <li><NavLink to='/codeblogRedux/signin'>Login</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignOutLink;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignInLink from './SignInLink';\r\nimport SignOutLink from './SignOutLink';\r\nimport { connect } from 'react-redux';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  //console.log(props);\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3 navBar\">\r\n      <div className=\"container\">\r\n        <Link to='/codeblogRedux' className='brand-logo'>Code Blog</Link>\r\n        {auth.uid ? <SignInLink profile={profile}/> : <SignOutLink />}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapState = (state) => {\r\n  //console.log(state);\r\n  return {\r\n    auth: state.firebaseRD.auth,\r\n    profile: state.firebaseRD.profile\r\n  };\r\n}\r\n\r\nexport default connect(mapState)(Navbar);\r\n","import React from 'react';\r\nimport './Post.css';\r\nimport moment from 'moment';\r\n\r\nconst Post = (props) => {\r\n  const { title, post } = props;\r\n  //console.log(props);\r\n\r\n  return (\r\n    <div className=\"card z-depth-0 postStyle\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{title}</span>\r\n        <p>Posted by: {post.firstName} {post.lastName}</p>\r\n        <p className='grey-text'>Date: {moment(post.createAt.toDate().toString()).format('LLL')}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport Post from './Post';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostsList = ({ posts }) => {\r\n  console.log(posts);\r\n  // should add a flag to check whether the \"posts\" props is null or not to prevent Dashboard issue\r\n\r\n  const list = posts.map((post) => (\r\n    <Link to={'/codeblogRedux/post/' + post.id} key={post.id} >\r\n      <Post title={post.title} post={post} />\r\n    </Link>\r\n  ));\r\n\r\n  // only render the list if posts exist\r\n  return (\r\n    <div className='section'>\r\n      {posts && list}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostsList;\r\n\r\n\r\n","import React from 'react';\r\nimport './Profile.css';\r\n\r\nconst Profile = () => {\r\n  // Get the modal\r\n  let modal = document.getElementById(\"myModal\");\r\n\r\n  // When the user clicks on the button, open the modal\r\n  const handleOpenModalBox = () => {\r\n    if(modal){\r\n      modal.style.display = \"block\";\r\n    }else {\r\n      modal = document.getElementById(\"myModal\");\r\n      modal.style.display = \"block\";\r\n      //console.log(\"the style not onload: \"+modal);\r\n    }\r\n  }\r\n\r\n  // When the user clicks on <span> (x), close the modal\r\n  const handleCloseModal = () => {\r\n    modal.style.display = \"none\";\r\n  }\r\n\r\n  // When the user clicks anywhere outside of the modal, close it\r\n  window.onclick = function (event) {\r\n    if (event.target == modal) {\r\n      modal.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  const handleProfileClick = (e) => {\r\n    e.preventDefault();\r\n    window.open(\"https://www.linkedin.com/in/dickson-pun-030846193/\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container white profileStyle\">\r\n        {/* profile */}\r\n        <div className=\"btnWrapper\">\r\n          <img className=\"profile-photo\"\r\n            src=\"https://media.licdn.com/dms/image/C5103AQFRX5stKAxzHQ/profile-displayphoto-shrink_200_200/0?e=1576108800&v=beta&t=gCpyUQ76yBtbkI5EXFjXNqtOGnqzdo68iepw9k5y0v0\"\r\n            onClick={handleProfileClick}\r\n          />\r\n        </div>\r\n        <div className=\"myname t-16 t-black t-normal\">Dickson PUN</div>\r\n        <div className=\"t-12 t-black t-normal\">Web Developer (React)</div>\r\n        <div >\r\n          <ul className=\"profile-info-ul\">\r\n            <li className=\"t-11 t-black t-normal inline-block\">Hong Kong</li>\r\n            <li className=\"t-11 t-bold\" onClick={handleOpenModalBox}>Contact info</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      {/* ModalBox - profile (default: hidden)*/}\r\n      <div id=\"myModal\" className=\"modal\">\r\n        <div className=\"modal-content\">\r\n          <span className=\"close\" onClick={handleCloseModal}>&times;</span>\r\n          <h5>Dickson PUN</h5>\r\n          <hr />\r\n          <span className=\"t-15 t-black t-normal\">Contact Info</span>\r\n\r\n          <div className=\"contactList\">\r\n            <img className=\"LinkedInImg\" />\r\n            <ul>\r\n              <li>Your Profile</li>\r\n              <li><a onClick={handleProfileClick}>linkedin.com/in/dickson-pun-030846193</a></li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"contactList\">\r\n            <img className=\"EmailImg\" />\r\n            <ul>\r\n              <li>Email</li>\r\n              <li><span>shotteammate@gmail.com</span> </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport PostsList from '../posts/PostsList';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    //console.log(this.props.posts);\r\n    const { posts, auth } = this.props;\r\n    //const reversePosts = posts.reverse(); //reverse posts, new post comes first\r\n\r\n    //if(!auth.uid) return <Redirect to='/codeblogRedux/signin' />\r\n    \r\n    return (\r\n      <div className='container'>\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m4\">\r\n            <Profile />\r\n          </div>\r\n          <div className=\"col s12 m8\">\r\n            <PostsList posts={posts} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n//state is the whole store\r\nconst mapState = (state) => {\r\n  //console.log(state);\r\n  return {\r\n    auth: state.firebaseRD.auth,\r\n    posts: state.firestoreRD.ordered.posts||state.postRD.posts, /* getting a \"TypeError: Cannot read property 'map' of undefined\". This is because on the initial rendering firestore hasn't had a chance to grab the latest data. You can see the console.log(state) inside mapStateToProps and see that the ordered object is empty initially. To combat this issue, you need to pass a fallback content when mapping state to props */\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapState),\r\n  firestoreConnect([          // mapState of Firebase\r\n    { collection: 'posts' }\r\n  ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport '../layout/Navbar.css';\r\n\r\nconst PostDetail = (props) => {\r\n  //console.log(props);\r\n  // we can only get props-id, then use the id to fetch other data online (in this case: connect to Firestore)\r\n  //const id = props.match.params.id;\r\n  const { post, auth } = props; \r\n  if(!auth.uid) return <Redirect to='/codeblogRedux/signin' />\r\n\r\n  //check post exist\r\n  if(post){\r\n    return (\r\n      <div className='container section navbarFixPostDetail'>\r\n        <div className=\"card z-depth-0 postDetailStyle\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{post.title}</span>\r\n            <p>{post.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by: {post.firstName} {post.lastName}</div>\r\n            <div>test date: {moment(post.createAt.toDate().toString()).format('LLL')}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading post...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = (state, ownProps) => {\r\n  //console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const posts = state.firestoreRD.data.posts; \r\n  const post = posts ? posts[id] : null;\r\n\r\n  return {\r\n    post: post,\r\n    auth: state.firebaseRD.auth\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapState),\r\n  firestoreConnect([\r\n    { collection: 'posts' }\r\n  ])\r\n)(PostDetail);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\nimport '../layout/Navbar.css';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    this.props.signIn(this.state);\r\n    //redirect to home page\r\n    //console.log(this.props);\r\n    this.props.history.push('/codeblogRedux');\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/codeblogRedux' />\r\n\r\n    return (\r\n      <div className='container navbarFixSignIn'>\r\n        <form onSubmit={this.handleOnSubmit} className=\"white\">\r\n          <h5 className=\"grey-text tex-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label>Email</label>\r\n            <input type=\"email\" name=\"email\" onChange={this.handleOnChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" onChange={this.handleOnChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn blue darken-2 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n            <div className=\"grey-text\">**Guest Log in account<br/>Email: guest@guest.com<br/>Password: 123456</div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = (state) => ({\r\n  auth: state.firebaseRD.auth,\r\n  authError: state.authRD.authError\r\n})\r\n\r\nconst mapDispatch = {\r\n  signIn: signIn\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(SignIn);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../actions/authActions'\r\nimport '../layout/Navbar.css';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.signUp(this.state);\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/codeblogRedux' />\r\n\r\n    return (\r\n      <div className='container navbarFixSignIn'>\r\n        <form onSubmit={this.handleOnSubmit} className=\"white\">\r\n          <h5 className=\"grey-text tex-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label>Email</label>\r\n            <input type=\"email\" name=\"email\" onChange={this.handleOnChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" onChange={this.handleOnChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label>First Name</label>\r\n            <input type=\"text\" name=\"firstName\" onChange={this.handleOnChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label>Last Name</label>\r\n            <input type=\"text\" name=\"lastName\" onChange={this.handleOnChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn blue darken-2 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n            <div className=\"grey-text\">**Guest Log in account<br/>Email: guest@guest.com<br/>Password: 123456</div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = (state) => ({\r\n  auth: state.firebaseRD.auth,\r\n  authError: state.authRD.authError\r\n})\r\n\r\nconst mapDispatch = {\r\n  signUp: signUp\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(SignUp);\r\n\r\n","import { ADD_POST, ADD_POST_ERROR } from './types';\r\nimport { firestoreConfigRef } from '../config/FirebaseConfig';\r\n\r\n// getFirestore & getFirebase comes from destructuring of thunk.withExtraArgument({ getFirebase, getFirestore }).\r\nexport const addPost = (post, proflie) => (dispatch, getState) => {\r\n  // make async call to database\r\n  //profile param is method 1, below is method 2 (to get user info.)\r\n  const authorId = getState().firebaseRD.auth.uid;\r\n  //console.log(proflie);\r\n\r\n  firestoreConfigRef.collection('posts').add({   //add an object -> doc\r\n    ...post,\r\n    firstName: proflie.firstName, //method 1\r\n    lastName: proflie.lastName,\r\n    authorId: authorId,           //method 2\r\n    createAt: new Date()       // return a promise and then(callback) \r\n  }).then(() => {\r\n    dispatch({ type: ADD_POST, post: post })\r\n  }).catch((err) => {\r\n    dispatch({ type: ADD_POST_ERROR, err: err })\r\n  })\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/postActions';\r\nimport {Redirect} from 'react-router-dom';\r\nimport '../layout/Navbar.css';\r\n\r\nclass AddPost extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(this.props.profile);\r\n    this.props.addPost(this.state, this.props.profile);\r\n    //redirect\r\n    this.props.history.push('/codeblogRedux');\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if(!auth.uid) return <Redirect to='/codeblogRedux/signin' />\r\n\r\n    return (\r\n      <div className='container navbarFixSignIn'>\r\n        <form onSubmit={this.handleOnSubmit} className=\"white\">\r\n          <h5 className=\"grey-text tex-darken-3\">Add Post</h5>\r\n          <div className=\"input-field\">\r\n            <label>Title</label>\r\n            <input type=\"text\" name=\"title\" onChange={this.handleOnChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label>Content</label>\r\n            <textarea className='materialize-textarea' name='content' onChange={this.handleOnChange}></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn blue darken-2 z-depth-0\">Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = (state) => {\r\n  //console.log(state);\r\n  return {\r\n    auth: state.firebaseRD.auth,\r\n    profile: state.firebaseRD.profile\r\n  };\r\n}\r\n\r\nconst mapDispatch = {\r\n  addPost: addPost\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(AddPost);\r\n\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PostDetail from './components/posts/PostDetail';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport AddPost from './components/posts/AddPost';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch >\n          <Route exact path='/codeblogRedux' component={Dashboard} />\n          <Route path='/codeblogRedux/post/:id' component={PostDetail} />\n          <Route path='/codeblogRedux/signin' component={SignIn} />\n          <Route path='/codeblogRedux/signup' component={SignUp} />\n          <Route path='/codeblogRedux/addpost' component={AddPost} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { LOGIN_SUCCESS, LOGIN_ERROR, SIGNOUT_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR } from '../actions/types';\r\n\r\nconst initialState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      console.log('LOGIN_SUCCESS: ');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case LOGIN_ERROR:\r\n      console.log('LOGIN_ERROR: ', action.err);\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      };\r\n    case SIGNOUT_SUCCESS:\r\n      console.log('SIGNOUT_SUCCESS: ', action.err);\r\n      return state;\r\n    case SIGNUP_SUCCESS:\r\n      console.log('SIGNUP_SUCCESS: ');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case SIGNUP_ERROR:\r\n      console.log('SIGNUP_ERROR: ', action.err);\r\n      return {\r\n        ...state,\r\n        authError: action.err.message    //invaild email, invaild password ...\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","import { ADD_POST, ADD_POST_ERROR } from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: []         //delete dummy data since Dashboard mapState issue\r\n};\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      console.log(\"Add post\", action.post);\r\n      return state;\r\n    case ADD_POST_ERROR:\r\n      console.log(\"Add post error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default postReducer;","import {combineReducers} from 'redux';\r\nimport authReducer from './authReducer';\r\nimport postReducer from './postReducer';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\nexport default combineReducers({\r\n  authRD: authReducer,\r\n  postRD: postReducer,\r\n  firestoreRD: firestoreReducer,\r\n  firebaseRD: firebaseReducer     // firebase Auth services\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport firebaseConfig from './config/FirebaseConfig';\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(\r\n      thunk.withExtraArgument({ getFirebase, getFirestore }),// ??work\r\n      logger\r\n    ),\r\n    reduxFirestore(firebaseConfig), \r\n    reactReduxFirebase(firebaseConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true, firebaseStateName:'firebaseRD'})\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );  \n})\n\n"],"sourceRoot":""}